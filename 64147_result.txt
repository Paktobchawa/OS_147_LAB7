1)

1.6 3

2)

Q1 this.datA = a;
   this.datB = b;
   this.datC = c
   this.processing_col = tCol;
   this.processing_row = tRow;

Q2 public

Q3 for (int i = 0; i < datA.data.length; i++) {
       for (int j = 0; j < datB.data.length; j++){
           datC.data[processing_row][i] += datA.data[processing_row][j] * datB.data[j][i];
       }
   }

Q4 Thread[][] threads = new Thread[matC_c][matC_r];

   for (int i = 0; i < matC_r; i++) {
       Thread matrix = new Thread(new MatrixMulThread(i, i, matA, matB, matC));
       matrix.start();
       for (int j = 0; j < matC_c; j++) {
            threads[j][i] = matrix;
       }
   }

Q5 for(Thread t : threads[0]) {
      try {
          t.join();
      } catch (Exception e) { System.out.println(e); }
   }
